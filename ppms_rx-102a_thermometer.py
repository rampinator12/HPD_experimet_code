# Change Spyder directory to C:\Users\vacnt\National Institute of Standards and Technology (NIST)\Sources and Detectors - Documents\CNT\code\labview\PPMS
import os
import sys
import time
from amcc.instruments.qdinstrument import QdInstrument
import pandas as pd
from tqdm import tqdm
import datetime

dll_path = os.path.dirname(r'C:\Users\vacnt\National Institute of Standards and Technology (NIST)\Sources and Detectors - Documents\CNT\code\labview\PPMS\\')
sys.path.append(dll_path)
x = QdInstrument('DynaCool', '0.0.0.0', remote = False)

from amcc.instruments.srs_sim970 import SIM970
from amcc.instruments.srs_sim928 import SIM928

dmm = SIM970('ASRL9::INSTR', 3)
vs = SIM928('ASRL9::INSTR', 2)

dmm.set_impedance(gigaohm=True, channel = 1)
dmm.set_impedance(gigaohm=True, channel = 2)

def lakeshore_rx102a_thermometer(R):
    Tcal = [0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.11, 0.12, 0.13, 0.14, 
         0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 
         0.32, 0.34, 0.36, 0.38, 0.4, 0.42, 0.44, 0.46, 0.48, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 
         0.9, 0.95, 1.0, 1.05, 1.1, 1.15, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4,
         2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.2, 4.4, 4.6, 4.8, 
         5.0, 5.2, 5.4, 5.6, 5.8, 6.0, 6.5, 7.0, 7.5, 8.0, 8.5, 9.0, 9.5, 10.0, 10.5, 11.0, 11.5, 12.0, 12.5,
         13.0, 13.5, 14.0, 14.5, 15.0, 15.5, 16.0, 16.5, 17.0, 17.5, 18.0, 18.5, 19.0, 19.5, 20.0, 21.0, 22.0,
         23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0,
         40.0]
    Rcal = [63765.0933339, 52106.7061211, 43515.7796269, 37123.8961461, 32601.2827893, 29253.3099785, 26563.6182357, 
         24330.6768135, 22443.680273299997, 20820.3413591, 19400.468094599997, 17039.129108, 15165.4632433,
         13658.2172879, 12431.612571200001, 11421.609156299999, 10579.5914102, 9868.59570001, 9261.10701331, 
         8735.85845713, 8277.0557641, 7872.35206776, 7512.68134086, 7190.6516876, 6900.15690502, 6636.72171044,
         6396.6270861, 6176.70026504, 5974.48353777, 5787.87193316, 5615.03028796, 5304.97595891, 5034.68208252,
         4797.01645865, 4586.34529128, 4398.4906945, 4230.01788395, 4078.03401863, 3940.32598408, 3815.02503641,
         3700.51845926, 3453.50101569, 3250.52617257, 3080.72512277, 2936.56535035, 2812.42460463, 2704.59844206,
         2609.09645474, 2523.00660493, 2446.93929168, 2380.76650498, 2320.08458987, 2263.64531088, 2211.30001803,
         2162.93254821, 2077.47996072, 2005.17667395, 1943.25369028, 1889.42111477, 1841.85409431, 1799.37927722,
         1761.10110115, 1726.40452444, 1694.79792273, 1665.90319585, 1639.39796999, 1615.01361993, 1592.5124333,
         1571.69099648, 1552.36705318, 1534.38465376, 1517.60367445, 1501.90475554, 1487.18051277, 1473.33958617,
         1460.29958661, 1447.99020896, 1436.34780953, 1425.31776148, 1414.85035596, 1404.90252771, 1395.43489448,
         1386.41322552, 1369.58445166, 1354.19866287, 1340.08262864, 1327.08348445, 1315.07273389, 1303.93840911,
         1293.59871697, 1283.98154797, 1275.00982904, 1266.57790893, 1247.55587506, 1231.55080107, 1217.38786568,
         1204.74989903, 1193.60221721, 1183.72919164, 1174.8920473, 1166.91456887, 1159.65124167, 1153.00610065,
         1146.90146643, 1141.2799848, 1136.09190804, 1131.29453814, 1126.84859665, 1122.71926196, 1118.87425339,
         1115.28545283, 1111.92700104, 1108.77683953, 1105.81481593, 1103.02391674, 1100.38862387, 1097.89584346,
         1095.53360562, 1093.29174577, 1091.16092561, 1089.13311714, 1085.3578648, 1081.91592289, 1078.76581524, 
         1075.87392349, 1073.20998316, 1070.74931461, 1068.46969337, 1066.35238764, 1064.38032031, 1062.53905823,
         1060.81540682, 1059.19815673, 1057.67699858, 1056.2431847, 1054.88864443, 1053.60642065, 1052.39013627, 
         1051.2344363, 1050.13424786, 1049.0848209]
    return np.interp(R, np.flipud(Rcal), np.flipud(Tcal))
    


#%% Run experiment
vs.set_voltage(1)
R_series = 976e3


data_list = []
time_start = time.time()
for n in tqdm(range(60000)):
    v1 = dmm.read_voltage(channel = 1)
    v2 = dmm.read_voltage(channel = 2)
    i = (v1-v2)/R_series
    R_dut = v2/i
    T = x.getTemperature()[1]
    data = dict(
        T = T,
        R_dut = R_dut,
        v1 = v1,
        v2 = v2,
        t = time.time()-time_start
        )
    time.sleep(0.1)
    data_list.append(data)

df = pd.DataFrame(data_list) 
filename = datetime.datetime.now().strftime('%Y-%m-%d %H-%M-%S SMA temperature data')
df.to_csv(filename+'.csv')

#%%
fig, axs = plt.subplots(2,1, sharex = True)
axs[0].plot(df.t, df['T'], label = 'PPMS internal sensor')
axs[0].plot(df.t,  lakeshore_rx102a_thermometer(df.R_dut), label = 'RX-102A probe')
axs[0].legend()
# axs[0].xlabel('Time (s)')
axs[0].set_ylabel('Temp (K)')
axs[1].plot(df.t,  df['T']- lakeshore_rx102a_thermometer(df.R_dut), label = 'Difference')
axs[1].legend()
axs[1].set_xlabel('Time (s)')
axs[1].set_ylabel('Difference in temp (K)')